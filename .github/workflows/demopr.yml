name: GitHub Actions TEST
on: 
  pull_request:
    branches:
      - test


jobs:
  terraform:
    name: "Terraform Plan"
    runs-on: ubuntu-latest

    env:
      TF_VAR_PROJ_ENV: ${{ github.base_ref }}
      TF_lOG: "INFO"

    permissions:
      # so GitHub can check out this repo using the default github.token
      contents: read
      pull-requests: write
    steps:
      - name: Checkout
        uses: actions/checkout@v3

      - uses: hashicorp/setup-terraform@v3
        with:
          terraform_version: "1.9.8"
      
      - name: Terraform init
        id: init    
        run: terraform init
              
      - id: plan
        run: terraform plan -no-color

      - name: add-plan-comment
        id: comment
        uses: actions/github-scripts@v7
        env:
          PLAN: "terraform\n${{ steps.plan.outputs.stdout }}"
        with:
          github-token: ${{ secrets.GITHUB_TOKEN }}
          script: |
            const output = `#### Terraform Initialization \`${{ steps.init.outcome }}\`
            #### Terraform Plan \`${{ steps.plan.outcome }}\`

            <details><summary>Show Plan</summary>

            \`\`\`\n
            ${process.env.PLAN}
            \`\`\`

            </details>

            *Pusher: @${{ github.actor }}, Action: \`${{ github.event_name }}\`, Working Directory: \`${{ env.TF_VAR_PROJ_ENV }}\`, Workflow: \`${{ github.workflow }}\`*`;

            github.rest.issues.createComment({
              issue_number: context.issue.number,
              owner: context.repo.owner,
              repo: context.repo.repo,
              body: output
            })
              
      - run: echo "$TF_VAR_PROJ_ENV"
      - run: echo ${{ steps.plan.outputs.stdout }}
      - run: echo ${{ steps.plan.outputs.stderr }}
      - run: echo ${{ steps.plan.outputs.exitcode }}
    
